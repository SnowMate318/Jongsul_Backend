# Generated by Django 5.0.6 on 2024-06-21 15:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_num', models.IntegerField()),
                ('choice_content', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'choice',
            },
        ),
        migrations.CreateModel(
            name='Directory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_successed', models.IntegerField(null=True)),
                ('concept', models.CharField(max_length=8000, null=True)),
                ('title', models.CharField(max_length=30)),
                ('question_type', models.CharField(blank=True, max_length=100, null=True)),
                ('directory_last_access', models.DateTimeField(auto_now=True)),
                ('is_scrap_directory', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'directory',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, null=True)),
                ('library_last_access', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'library',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_num', models.IntegerField()),
                ('question_title', models.CharField(max_length=1000)),
                ('question_content', models.CharField(blank=True, max_length=2000, null=True)),
                ('question_answer', models.CharField(max_length=100)),
                ('question_explanation', models.CharField(max_length=2000)),
                ('question_type', models.IntegerField()),
                ('last_solved', models.BooleanField(null=True)),
                ('is_scrapped', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'question',
            },
        ),
    ]
